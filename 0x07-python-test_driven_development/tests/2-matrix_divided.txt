Test cases for module 2-matrix_divided.py
========================================

#import module.
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

#division operation on a matrix with uniform integer values
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 3))
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

#division operation on a matrix with negative values
>>> matrix = [[1, 2, -3], [4, 5, -6]]
>>> print(matrix_divided(matrix, 2))
[[0.5, 1.0, -1.5], [2.0, 2.5, -3.0]]

#division operation on an empty matrix
>>> matrix = [[]]
>>> print(matrix_divided(matrix, 2))
[[]]

#Validation of uniformity of matrix dimensions
>>> matrix = [[1, 2, 3], [4, 5]]
>>> print(matrix_divided(matrix, 2))
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

#Error handling for non-numeric inputs in matrix
>>> matrix = [['h', 'o', 'l'], ['b', 5, 6]]
>>> print(matrix_divided(matrix, 5))
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

#Error handling for division by zero
Zero "div" input:
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> print(matrix_divided(matrix, 0))
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

#Error handling for missing input parameters
>>> print(matrix_divided())
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'
