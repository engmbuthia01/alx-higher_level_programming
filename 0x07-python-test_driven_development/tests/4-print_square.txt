# Test cases for print_square function
= ====================================

# Import the module
>>> print_square = __import__('4-print_square').print_square

# Printing a square with size 1
>>> print_square(1)
#

# Printing a square with size 4
>>> print_square(4)
####
####
####
####

# Printing a square with size 10
>>> print_square(10)
##########
##########
##########
##########
##########
##########
##########
##########
##########
##########

# Printing a square with size 0
>>> print_square(0)
# (no output expected)

# Error handling for non-integer input
>>> print_square("not an int")
Traceback (most recent call last):
...
TypeError: size must be an integer

# Error handling for non-integer float input
>>> print_square(5.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

# Error handling for None input
>>> print_square(None)
Traceback (most recent call last):
...
TypeError: size must be an integer

# Error handling for negative size
>>> print_square(-7)
Traceback (most recent call last):
...
ValueError: size must be >= 0

# Error handling for negative float size
>>> print_square(-7.5)
Traceback (most recent call last):
...
TypeError: size must be an integer

# Error handling for missing input parameter
>>> print_square()
Traceback (most recent call last):
...
TypeError: print_square() missing 1 required positional argument: 'size'

